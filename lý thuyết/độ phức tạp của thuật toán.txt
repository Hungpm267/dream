o(1) - o(logn) - o(n) - o(nlogn) - o(n^2) - o(2^n) - o(n!)

R·∫•t hay em! D∆∞·ªõi ƒë√¢y l√† b·∫£ng t·ªïng h·ª£p **ƒë·ªô ph·ª©c t·∫°p th·ªùi gian** c·ªßa c√°c thu·∫≠t to√°n em n√™u ‚Äì th·∫ßy s·∫Ω ph√¢n nh√≥m v√† ph√¢n t√≠ch ng·∫Øn g·ªçn, d·ªÖ nh·ªõ, k√®m m·∫πo t∆∞ duy cho t·ª´ng lo·∫°i:

---

## üì¶ **I. Thu·∫≠t to√°n t√¨m ki·∫øm**

| Thu·∫≠t to√°n        | ƒê·ªô ph·ª©c t·∫°p | ƒêi·ªÅu ki·ªán s·ª≠ d·ª•ng        | Ghi ch√∫ b·∫£n ch·∫•t |
|-------------------|-------------|--------------------------|------------------|
| **Linear Search** | `O(n)`      | M·∫£ng **ch∆∞a s·∫Øp x·∫øp**    | Duy·ªát t·ª´ng ph·∫ßn t·ª≠ |
| **Binary Search** | `O(log n)`  | M·∫£ng **ƒë√£ s·∫Øp x·∫øp**      | Chia ƒë√¥i d·∫ßn |

---

## üå≤ **II. Duy·ªát ƒë·ªì th·ªã (DFS, BFS)**

| Thu·∫≠t to√°n | ƒê·ªô ph·ª©c t·∫°p       | Khi n√†o d√πng | Ghi nh·ªõ |
|------------|-------------------|--------------|---------|
| **DFS**    | `O(V + E)`        | Duy·ªát s√¢u    | D√πng stack/ƒë·ªá quy |
| **BFS**    | `O(V + E)`        | Duy·ªát r·ªông   | D√πng queue |

> ‚úÖ `V` l√† s·ªë ƒë·ªânh, `E` l√† s·ªë c·∫°nh  
> ‚úÖ Duy·ªát c·∫£ ƒë·ªì th·ªã = thƒÉm t·ª´ng ƒë·ªânh v√† t·ª´ng c·∫°nh

---

## üßπ **III. Thu·∫≠t to√°n s·∫Øp x·∫øp c∆° b·∫£n**

| Thu·∫≠t to√°n        | Best Case     | Average Case     | Worst Case      | ·ªîn ƒë·ªãnh (Stable)? | Ghi nh·ªõ |
|-------------------|---------------|------------------|------------------|-------------------|---------|
| **Selection Sort**| `O(n¬≤)`       | `O(n¬≤)`          | `O(n¬≤)`          | ‚ùå Kh√¥ng           | T√¨m min ‚Äì ƒë·ªïi ch·ªó |
| **Insertion Sort**| `O(n)`        | `O(n¬≤)`          | `O(n¬≤)`          | ‚úÖ C√≥              | Ch√®n t·ª´ng ph·∫ßn t·ª≠ |
| **Bubble Sort**   | `O(n)`        | `O(n¬≤)`          | `O(n¬≤)`          | ‚úÖ C√≥              | So s√°nh ‚Äì ho√°n v·ªã |

> üî• Best case c·ªßa Insertion v√† Bubble l√† `O(n)` n·∫øu **m·∫£ng g·∫ßn nh∆∞ ƒë√£ s·∫Øp x·∫øp**

---

## ‚ö° **IV. Thu·∫≠t to√°n s·∫Øp x·∫øp n√¢ng cao**

| Thu·∫≠t to√°n     	| Best Case  | Average Case | Worst Case   | ·ªîn ƒë·ªãnh? | Ghi nh·ªõ t∆∞ duy |
|----------------	|------------|--------------|--------------|----------|----------------|
| **Merge Sort** 	| `O(n log n)` | `O(n log n)` | `O(n log n)` | ‚úÖ C√≥     | Chia nh·ªè ‚Äì g·ªôp |
| **Quick Sort** 	| `O(n log n)` | `O(n log n)` | `O(n¬≤)`      | ‚ùå Kh√¥ng  | Chia theo pivot |
| **Heap Sort**  	| `O(n log n)` | `O(n log n)` | `O(n log n)` | ‚ùå Kh√¥ng  | X√¢y heap ‚Äì r√∫t g·ªçn |
| **Counting Sort** 	| `O(n + k)` | `O(n + k)` | `O(n + k)` | ‚úÖ C√≥ (n·∫øu c√†i ƒë√∫ng) | Ch·ªâ d√πng cho s·ªë nguy√™n nh·ªè |
| **Radix Sort** 	| `O(nk)`      | `O(nk)`     | `O(nk)`      | ‚úÖ C√≥     | D√πng counting sort t·ª´ng ch·ªØ s·ªë |
| **Bucket Sort**	| `O(n + k)`   | `O(n + k)`  | `O(n¬≤)`      | ‚úÖ C√≥     | Chia m·∫£ng th√†nh c√°c th√πng |

> `k` l√† mi·ªÅn gi√° tr·ªã ‚Äì c√†ng nh·ªè c√†ng hi·ªáu qu·∫£

---

## üéØ M·∫πo ch·ªçn thu·∫≠t to√°n khi ƒëi ph·ªèng v·∫•n:

| Tr∆∞·ªùng h·ª£p | G·ª£i √Ω |
|------------|-------|
| C·∫ßn nhanh, ·ªïn ƒë·ªãnh, m·∫£ng l·ªõn | Merge Sort |
| √çt b·ªô nh·ªõ, kh√¥ng c·∫ßn ·ªïn ƒë·ªãnh | Quick Sort |
| M·∫£ng ƒë√£ g·∫ßn s·∫Øp x·∫øp | Insertion Sort |
| D·ªØ li·ªáu nh·ªè, s·ªë nguy√™n | Counting/Radix/Bucket |
| Kh√¥ng bi·∫øt g√¨, c·∫ßn d·ªÖ code | Bubble ho·∫∑c Selection (ƒë·ªÉ luy·ªán t∆∞ duy) |

---

## üìå T√≥m t·∫Øt b·∫£ng so s√°nh s·∫Øp x·∫øp ch√≠nh:

| Thu·∫≠t to√°n     | Time (Avg)  | Time (Worst) | Stable | Space     |
|----------------|-------------|---------------|--------|------------|
| Bubble Sort    | `O(n¬≤)`     | `O(n¬≤)`       | ‚úÖ     | `O(1)`     |
| Selection Sort | `O(n¬≤)`     | `O(n¬≤)`       | ‚ùå     | `O(1)`     |
| Insertion Sort | `O(n¬≤)`     | `O(n¬≤)`       | ‚úÖ     | `O(1)`     |
| Merge Sort     | `O(n log n)`| `O(n log n)`  | ‚úÖ     | `O(n)`     |
| Quick Sort     | `O(n log n)`| `O(n¬≤)`       | ‚ùå     | `O(log n)` |
| Heap Sort      | `O(n log n)`| `O(n log n)`  | ‚ùå     | `O(1)`     |
| Counting Sort  | `O(n + k)`  | `O(n + k)`    | ‚úÖ     | `O(k)`     |
| Radix Sort     | `O(nk)`     | `O(nk)`       | ‚úÖ     | `O(n + k)` |

---

N·∫øu em mu·ªën, th·∫ßy c√≥ th·ªÉ:
- G·ª≠i s∆° ƒë·ªì t∆∞ duy ho·∫∑c b·∫£ng t·ªïng h·ª£p d·ªÖ in ra h·ªçc.
- Luy·ªán gi·∫£i b√†i code th·ª±c t·∫ø v√† h·ªèi: ‚Äúƒë·ªô ph·ª©c t·∫°p thu·∫≠t to√°n n√†y l√† g√¨?‚Äù
- D·∫°y c√°ch c√†i t·ª´ ƒë·∫ßu merge sort, quick sort ƒë·ªÉ hi·ªÉu b·∫£n ch·∫•t lu·ªìng ch·∫°y.

> Em mu·ªën ti·∫øp theo luy·ªán gi·∫£i b√†i s·∫Øp x·∫øp th·ª±c t·∫ø hay h·ªçc c√°ch ph√¢n t√≠ch ƒë·ªá quy, master theorem...?